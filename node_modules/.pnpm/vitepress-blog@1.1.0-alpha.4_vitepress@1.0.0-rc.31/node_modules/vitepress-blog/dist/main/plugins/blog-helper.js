/*! 
 * vitepress-blog v1.1.0-alpha.3
 * (c) yue1123
 * Homepage: https://github.com/yue1123/vitepress-blog
 * Released under the MIT License.
 */
import path from 'path';
import fs from 'fs';
import { getFileCreateTime, getFileUpdateTime, appendFrontmatter, getSnippets } from '../utils/index.js';

function blogHelper(userConfig) {
  const { themeConfig = {} } = userConfig;
  let config;
  const createTimeCache = /* @__PURE__ */ Object.create(null);
  const updateTimeCache = /* @__PURE__ */ Object.create(null);
  return {
    name: "blog-helper",
    enforce: "pre",
    configResolved(resolvedConfig) {
      config = resolvedConfig;
    },
    handleHotUpdate({ file }) {
      if (createTimeCache[file])
        createTimeCache[file] = null;
      if (updateTimeCache[file])
        updateTimeCache[file] = null;
    },
    async transform(code, id) {
      if (!id.endsWith(".md") || !/\/posts\//.test(id))
        return;
      let tags = [];
      let createTime = createTimeCache[id] || null;
      if (!createTimeCache[id]) {
        if (config.command !== "build") {
          const stat = fs.statSync(id);
          if (!!stat) {
            createTime = createTimeCache[id] = Math.floor(stat.birthtimeMs) + "";
          }
        } else {
          createTime = createTimeCache[id] = await getFileCreateTime(id) + "";
        }
      }
      let updateTime = createTimeCache[id] || null;
      if (!updateTimeCache[id]) {
        if (config.command !== "build") {
          const stat = fs.statSync(id);
          if (!!stat) {
            updateTime = updateTimeCache[id] = Math.floor(stat.mtimeMs) + "";
          }
        } else {
          updateTime = updateTimeCache[id] = await getFileUpdateTime(id) + "";
        }
      }
      let title = path.basename(id, ".md");
      let titleReg = /\x20*\# (.+)/;
      if (themeConfig.titleOrder && themeConfig.titleOrder === "contentTitle") {
        const res = code.match(titleReg);
        if (res && res[1]) {
          title = res[1];
        }
        code = code.replace(titleReg, "");
      }
      if (themeConfig.filePathToTags) {
        tags = themeConfig.filePathToTags.reduce((tags2, { test: reg, tag }) => {
          if (reg.test(id)) {
            typeof tag === "string" ? tags2.push(tag) : tags2.push.apply(tags2, tag);
          }
          return tags2;
        }, []);
      }
      return appendFrontmatter(code, {
        createTime,
        updateTime,
        title,
        tags,
        snippets: getSnippets(code, themeConfig.snippetsLength || 50),
        isPost: true
      });
    }
  };
}

export { blogHelper as default };
